apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: chemchat-hpa
  namespace: chemchat
  labels:
    app.kubernetes.io/name: chemchat
    app.kubernetes.io/component: autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: chemchat-api
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: websocket_connections_per_pod
      target:
        type: AverageValue
        averageValue: "1000"
  - type: Object
    object:
      metric:
        name: kafka_consumer_lag
      target:
        type: Value
        value: "100"
      describedObject:
        apiVersion: v1
        kind: Service
        name: kafka-service
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Min
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 30
      - type: Pods
        value: 4
        periodSeconds: 30
      selectPolicy: Max
---
apiVersion: v1
kind: ServiceMonitor
metadata:
  name: chemchat-metrics
  namespace: chemchat
  labels:
    app.kubernetes.io/name: chemchat
    app.kubernetes.io/component: monitoring
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: chemchat
      app.kubernetes.io/component: api
  endpoints:
  - port: http
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: chemchat-alerts
  namespace: chemchat
  labels:
    app.kubernetes.io/name: chemchat
    app.kubernetes.io/component: monitoring
spec:
  groups:
  - name: chemchat.rules
    rules:
    - alert: ChemChatHighCPU
      expr: rate(container_cpu_usage_seconds_total{pod=~"chemchat-api-.*"}[5m]) > 0.8
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "ChemChat API high CPU usage"
        description: "Pod {{ $labels.pod }} has high CPU usage: {{ $value }}"
    
    - alert: ChemChatHighMemory
      expr: container_memory_usage_bytes{pod=~"chemchat-api-.*"} / container_spec_memory_limit_bytes > 0.9
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "ChemChat API high memory usage"
        description: "Pod {{ $labels.pod }} has high memory usage: {{ $value }}"
    
    - alert: ChemChatPodCrashLooping
      expr: rate(kube_pod_container_status_restarts_total{pod=~"chemchat-api-.*"}[15m]) > 0
      for: 5m
      labels:
        severity: critical
      annotations:
        summary: "ChemChat API pod crash looping"
        description: "Pod {{ $labels.pod }} is crash looping"
    
    - alert: ChemChatHighWebSocketConnections
      expr: websocket_active_connections > 5000
      for: 2m
      labels:
        severity: warning
      annotations:
        summary: "ChemChat high WebSocket connections"
        description: "WebSocket connections: {{ $value }}"
    
    - alert: ChemChatKafkaConsumerLag
      expr: kafka_consumer_lag_sum > 1000
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "ChemChat Kafka consumer lag"
        description: "Kafka consumer lag: {{ $value }}"
    
    - alert: ChemChatDatabaseConnections
      expr: pg_stat_activity_count > 80
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "ChemChat high database connections"
        description: "Database connections: {{ $value }}"
