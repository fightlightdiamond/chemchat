apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: chemchat
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: chemchat
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: chemchat
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    rule_files:
      - "chemchat_rules.yml"
    
    alerting:
      alertmanagers:
      - static_configs:
        - targets:
          - alertmanager:9093
    
    scrape_configs:
    - job_name: 'prometheus'
      static_configs:
      - targets: ['localhost:9090']
    
    - job_name: 'chemchat-api'
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - chemchat
      relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        action: keep
        regex: chemchat-service
      - source_labels: [__meta_kubernetes_endpoint_port_name]
        action: keep
        regex: http
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
    
    - job_name: 'postgres-exporter'
      static_configs:
      - targets: ['postgres-exporter:9187']
    
    - job_name: 'redis-exporter'
      static_configs:
      - targets: ['redis-exporter:9121']
    
    - job_name: 'elasticsearch-exporter'
      static_configs:
      - targets: ['elasticsearch-exporter:9114']
    
    - job_name: 'kafka-exporter'
      static_configs:
      - targets: ['kafka-exporter:9308']
    
    - job_name: 'node-exporter'
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - source_labels: [__meta_kubernetes_endpoints_name]
        regex: 'node-exporter'
        action: keep
  
  chemchat_rules.yml: |
    groups:
    - name: chemchat.rules
      rules:
      - alert: ChemChatHighCPU
        expr: rate(container_cpu_usage_seconds_total{pod=~"chemchat-api-.*"}[5m]) > 0.8
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "ChemChat API high CPU usage"
          description: "Pod {{ $labels.pod }} has high CPU usage: {{ $value }}"
      
      - alert: ChemChatHighMemory
        expr: container_memory_usage_bytes{pod=~"chemchat-api-.*"} / container_spec_memory_limit_bytes > 0.9
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "ChemChat API high memory usage"
          description: "Pod {{ $labels.pod }} has high memory usage: {{ $value }}"
      
      - alert: ChemChatPodDown
        expr: up{job="chemchat-api"} == 0
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: "ChemChat API pod is down"
          description: "ChemChat API pod has been down for more than 2 minutes"
      
      - alert: ChemChatHighWebSocketConnections
        expr: websocket_active_connections > 5000
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "ChemChat high WebSocket connections"
          description: "WebSocket connections: {{ $value }}"
      
      - alert: ChemChatKafkaConsumerLag
        expr: kafka_consumer_lag_sum > 1000
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "ChemChat Kafka consumer lag"
          description: "Kafka consumer lag: {{ $value }}"
      
      - alert: ChemChatDatabaseConnections
        expr: pg_stat_activity_count > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "ChemChat high database connections"
          description: "Database connections: {{ $value }}"
      
      - alert: ChemChatRedisConnections
        expr: redis_connected_clients > 100
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "ChemChat high Redis connections"
          description: "Redis connections: {{ $value }}"
      
      - alert: ChemChatElasticsearchYellow
        expr: elasticsearch_cluster_health_status{color="yellow"} == 1
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "Elasticsearch cluster status is yellow"
          description: "Elasticsearch cluster health is yellow for more than 10 minutes"
      
      - alert: ChemChatElasticsearchRed
        expr: elasticsearch_cluster_health_status{color="red"} == 1
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: "Elasticsearch cluster status is red"
          description: "Elasticsearch cluster health is red"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-pvc
  namespace: chemchat
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: chemchat
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
      - name: prometheus
        image: prom/prometheus:v2.45.0
        args:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus/'
          - '--web.console.libraries=/etc/prometheus/console_libraries'
          - '--web.console.templates=/etc/prometheus/consoles'
          - '--storage.tsdb.retention.time=200h'
          - '--web.enable-lifecycle'
          - '--web.enable-admin-api'
        ports:
        - containerPort: 9090
        resources:
          requests:
            cpu: 500m
            memory: 500M
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
        - name: prometheus-config-volume
          mountPath: /etc/prometheus/
        - name: prometheus-storage-volume
          mountPath: /prometheus/
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 30
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 30
      volumes:
      - name: prometheus-config-volume
        configMap:
          defaultMode: 420
          name: prometheus-config
      - name: prometheus-storage-volume
        persistentVolumeClaim:
          claimName: prometheus-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: chemchat
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '9090'
spec:
  selector:
    app: prometheus
  type: ClusterIP
  ports:
  - port: 9090
    targetPort: 9090
