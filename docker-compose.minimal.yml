version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: chemchat-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: chatdb
      POSTGRES_USER: chemchat
      POSTGRES_PASSWORD: chemchat_password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chemchat -d chatdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Session Store
  redis:
    image: redis:7-alpine
    container_name: chemchat-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis_password
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # ChemChat Application
  chemchat-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: chemchat-app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3000:3000"
      - "9229:9229"  # Node.js debugger port
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://chemchat:chemchat_password@postgres:5432/chatdb
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis_password
      - JWT_ACCESS_SECRET=dev-super-secret-access-token-key-change-in-production
      - JWT_REFRESH_SECRET=dev-super-secret-refresh-token-key-change-in-production
      - JWT_WS_SECRET=dev-super-secret-websocket-token-key-change-in-production
      - JWT_MFA_SECRET=dev-super-secret-mfa-token-key-change-in-production
      - LOG_LEVEL=debug
      - ENABLE_SWAGGER=true
      - CORS_ORIGIN=http://localhost:3001,http://localhost:3000
    volumes:
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs
    command: npm run start:dev
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Adminer for Database Management
  adminer:
    image: adminer:4.8.1
    container_name: chemchat-adminer
    restart: unless-stopped
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: chemchat-network
